diff -ru afpfs-ng-0.8.1.orig/lib/loop.c afpfs-ng-0.8.1.new/lib/loop.c
--- afpfs-ng-0.8.1.orig/lib/loop.c	2025-02-06 15:18:29.028488247 +0100
+++ afpfs-ng-0.8.1.new/lib/loop.c	2025-02-06 15:02:08.261418298 +0100
@@ -87,7 +87,7 @@
 static int ending=0;
 void * just_end_it_now(void * ignore)
 {
-	if (ending) return;
+	if (ending) return(NULL);
 	ending=1;
 	if (libafpclient->forced_ending_hook) 
 		libafpclient->forced_ending_hook();
diff -ru afpfs-ng-0.8.1.orig/lib/proto_directory.c afpfs-ng-0.8.1.new/lib/proto_directory.c
--- afpfs-ng-0.8.1.orig/lib/proto_directory.c	2025-02-06 15:18:29.030488258 +0100
+++ afpfs-ng-0.8.1.new/lib/proto_directory.c	2025-02-06 15:17:58.862309936 +0100
@@ -16,6 +16,19 @@
 #include "dsi_protocol.h"
 #include "afp_replies.h"
 
+typedef struct reply_entry {
+	uint8_t size;
+	uint8_t isdir;
+};
+
+typedef	struct ext2_reply_entry {
+	uint16_t size;
+	uint8_t isdir;
+	uint8_t pad;
+};
+
+
+
 int afp_moveandrename(struct afp_volume *volume,
 	unsigned int src_did, 
 	unsigned int dst_did, 
@@ -200,10 +213,7 @@
 		uint16_t reqcount;
 	} __attribute__((__packed__)) * reply = (void *) buf;
 
-	struct {
-		uint8_t size;
-		uint8_t isdir;
-	} __attribute__((__packed__)) * entry;
+	struct reply_entry __attribute__((__packed__)) * entry;
 	char * p = buf + sizeof(*reply);
 	int i;
 	char  *max=buf+size;
@@ -219,7 +229,7 @@
 	}
 
 	for (i=0;i<ntohs(reply->reqcount);i++) {
-		entry  = (void *) p;
+		entry = ( struct reply_entry *) p;
 
 		if (p>max) {
 			return -1;
@@ -259,11 +269,7 @@
 		uint16_t reqcount;
 	} __attribute__((__packed__)) * reply = (void *) buf;
 
-	struct {
-		uint16_t size;
-		uint8_t isdir;
-		uint8_t pad;
-	} __attribute__((__packed__)) * entry;
+	struct ext2_reply_entry __attribute__((__packed__)) * entry;
 	char * p = buf + sizeof(*reply);
 	int i;
 	char  *max=buf+size;
@@ -293,7 +299,7 @@
 			filecur=new_file;
 		}
 
-		entry = p;
+		entry = ( struct ext2_reply_entry *) p;
 
 		parse_reply_block(server,p+sizeof(*entry),
 			ntohs(entry->size),entry->isdir,
diff -ru afpfs-ng-0.8.1.orig/lib/uams.c afpfs-ng-0.8.1.new/lib/uams.c
--- afpfs-ng-0.8.1.orig/lib/uams.c	2025-02-06 15:18:29.030488258 +0100
+++ afpfs-ng-0.8.1.new/lib/uams.c	2025-02-06 15:00:32.383809018 +0100
@@ -36,7 +36,7 @@
 static int cleartxt_login(struct afp_server *server, char *username,
 				char *passwd);
 static int cleartxt_passwd(struct afp_server *server, char *username,
-				char *passwd);
+				char *passwd, char *newpasswd);
 #ifdef HAVE_LIBGCRYPT
 static int randnum_login(struct afp_server *server, char *username,
 		char *passwd);
@@ -49,8 +49,7 @@
 static struct afp_uam uam_noauth = 
 	{UAM_NOUSERAUTHENT,"No User Authent",&noauth_login,NULL,NULL};
 static struct afp_uam uam_cleartxt = 
-	{UAM_CLEARTXTPASSWRD,"Cleartxt Passwrd",&cleartxt_login,
-		&cleartxt_passwd,NULL};
+	{UAM_CLEARTXTPASSWRD,"Cleartxt Passwrd",&cleartxt_login,&cleartxt_passwd,NULL};
 #ifdef HAVE_LIBGCRYPT
 static struct afp_uam uam_randnum = 
 	{UAM_RANDNUMEXCHANGE, "Randnum Exchange", &randnum_login,NULL,NULL};
@@ -219,7 +218,7 @@
  *      +------------------+
  */
 static int cleartxt_passwd(struct afp_server *server, 
-	char *username, char *passwd) {
+	char *username, char *passwd, char *newpasswd) {
 
 	char *p, *ai = NULL;
 	int len, ret;
