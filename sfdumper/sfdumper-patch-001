diff -c -r -N 2.1-original/sfdumper.sh 2.1/sfdumper.sh
*** 2.1-original/sfdumper.sh	2009-10-05 19:48:00.000000000 -0400
--- 2.1/sfdumper.sh	2010-02-17 15:07:35.137603009 -0500
***************
*** 6,21 ****
  echo " "
  echo "usage:"
  echo "--------------------------------------------------------------------------"
! echo "./sfdumper.sh -h  --> show this help"
! echo "./sfdumepr.sh -M  --> show MANUAL (requirements, functionality, usage, about)"
! echo "./sfdumper.sh -I  --> Interactive running, the parameters are entered"
  echo "                      by the operator during the execution"
! echo "./sfdumper.sh -T -i /dev/device_name -t raw -o output_directory"
  echo "                  --> the script works on a device device_name (hda, sda1, mmcblk0, etc..)"
! echo "./sfdumper.sh -T -i <image path and name>  -t <image type> -o <output directory>"
  echo "                  --> the script works on a single image file"
! echo "./sfdumper.sh -T -d <path of dir containing split image> -t <image type> -o <output directory>"
! echo "                  --> the script works on a split image contained in specified path"
  echo " "
  echo "where:"   
  echo "  <image type> must be specify, and could be raw (like generated by dd or device),"
--- 6,21 ----
  echo " "
  echo "usage:"
  echo "--------------------------------------------------------------------------"
! echo "/usr/bin/sfdumper -h  --> show this help"
! echo "/usr/bin/sfdumper -M  --> show MANUAL (requirements, functionality, usage, about)"
! echo "/usr/bin/sfdumper -I  --> Interactive running, the parameters are entered"
  echo "                      by the operator during the execution"
! echo "/usr/bin/sfdumper -T -i /dev/device_name -t raw -o output_directory"
  echo "                  --> the script works on a device device_name (hda, sda1, mmcblk0, etc..)"
! echo "/usr/bin/sfdumper -T -i <image path and name>  -t <image type> -o <output directory>"
  echo "                  --> the script works on a single image file"
! echo "/usr/bin/sfdumper -T -d <path of dir containing split image> -t <image type> -o <output directory>"
! echo "                 --> the script works on a split image contained in specified path"
  echo " "
  echo "where:"   
  echo "  <image type> must be specify, and could be raw (like generated by dd or device),"
***************
*** 322,328 ****
  	then 
  		DO_CARVING="2"
  		FORMATSEARCH="$(echo $2 |tr '[:upper:]' '[:lower:]')"
! 		sed  '/^-----INIZIO FOREMOST CONFIG-----/,/^-----FINE FOREMOST CONFIG-----/p' sfdumper.sh -n |grep $FORMATSEARCH > $DIR_OUTPUT/tmp/carving_config.txt
  	else 
  		DO_CARVING="3"
  	fi 
--- 322,328 ----
  	then 
  		DO_CARVING="2"
  		FORMATSEARCH="$(echo $2 |tr '[:upper:]' '[:lower:]')"
! 		sed  '/^-----INIZIO FOREMOST CONFIG-----/,/^-----FINE FOREMOST CONFIG-----/p' /usr/bin/sfdumper -n |grep $FORMATSEARCH > $DIR_OUTPUT/tmp/carving_config.txt
  	else 
  		DO_CARVING="3"
  	fi 
***************
*** 852,862 ****
  	"-h") helper;;
  	"-M") echo " " >/tmp/sfdumper_manual.txt
  			echo " SFDUMPER v.2.1 MANUAL" >>/tmp/sfdumper_manual.txt
! 			sed  '/^-----INIZIO WHAT IS-----/,/^-----FINE WHAT IS-----/p' sfdumper.sh -n | grep -v "^-----" >/tmp/sfdumper_manual.txt
  			echo " " >>/tmp/sfdumper_manual.txt
  			echo "**********************************************************">>/tmp/sfdumper_manual.txt
  			echo "ABOUT">>/tmp/sfdumper_manual.txt
! 			sed  '/^-----INIZIO ABOUT-----/,/^-----FINE ABOUT-----/p' sfdumper.sh -n | grep -v "^-----" >>/tmp/sfdumper_manual.txt
  			less /tmp/sfdumper_manual.txt
  			rm /tmp/sfdumper_manual.txt;;
  	"-I") testata
--- 852,862 ----
  	"-h") helper;;
  	"-M") echo " " >/tmp/sfdumper_manual.txt
  			echo " SFDUMPER v.2.1 MANUAL" >>/tmp/sfdumper_manual.txt
! 			sed  '/^-----INIZIO WHAT IS-----/,/^-----FINE WHAT IS-----/p' /usr/bin/sfdumper -n | grep -v "^-----" >/tmp/sfdumper_manual.txt
  			echo " " >>/tmp/sfdumper_manual.txt
  			echo "**********************************************************">>/tmp/sfdumper_manual.txt
  			echo "ABOUT">>/tmp/sfdumper_manual.txt
! 			sed  '/^-----INIZIO ABOUT-----/,/^-----FINE ABOUT-----/p' /usr/bin/sfdumper -n | grep -v "^-----" >>/tmp/sfdumper_manual.txt
  			less /tmp/sfdumper_manual.txt
  			rm /tmp/sfdumper_manual.txt;;
  	"-I") testata
***************
*** 875,882 ****
  				echo " "
  				echo " "	
  				case $RISPOSTA3 in
! 					2)	sed  '/^-----INIZIO WHAT IS-----/,/^-----FINE WHAT IS-----/p' sfdumper.sh -n | grep -v "^-----" | more  ;;
! 					3)	sed  '/^-----INIZIO ABOUT-----/,/^-----FINE ABOUT-----/p' sfdumper.sh -n  | grep -v "^-----"
  						echo " ";;
  					4) echo "Program terminated by the user"
  						umount /tmp/sfdumperaff 2>/dev/null
--- 875,882 ----
  				echo " "
  				echo " "	
  				case $RISPOSTA3 in
! 					2)	sed  '/^-----INIZIO WHAT IS-----/,/^-----FINE WHAT IS-----/p' /usr/bin/sfdumper -n | grep -v "^-----" | more  ;;
! 					3)	sed  '/^-----INIZIO ABOUT-----/,/^-----FINE ABOUT-----/p' /usr/bin/sfdumper -n  | grep -v "^-----"
  						echo " ";;
  					4) echo "Program terminated by the user"
  						umount /tmp/sfdumperaff 2>/dev/null
***************
*** 1195,1209 ****
  USAGE:
  ******
  
! ./sfdumper.sh -h  --> show this help
! ./sfdumepr.sh -M  --> show MANUAL (requirements, functionality, usage, about)
! ./sfdumper.sh -I  --> Interactive running, the parameters are entered
                        by the operator during the execution
! ./sfdumper.sh -T -i /dev/device_name -t raw -o output_directory
                    --> the script works on a device device_name (hda, sda1, mmcblk0, etc..)
! ./sfdumper.sh -T -i <image path and name>  -t <image type> -o <output directory>
                    --> the script works on a single image file
! ./sfdumper.sh -T -d <path of dir containing split image> -t <image type> -o <output directory>
                    --> the script works on a split image contained in specified path
  
  where:
--- 1195,1209 ----
  USAGE:
  ******
  
! /usr/bin/sfdumper -h  --> show this help
! /usr/bin/sfdumper -M  --> show MANUAL (requirements, functionality, usage, about)
! /usr/bin/sfdumper -I  --> Interactive running, the parameters are entered
                        by the operator during the execution
! /usr/bin/sfdumper -T -i /dev/device_name -t raw -o output_directory
                    --> the script works on a device device_name (hda, sda1, mmcblk0, etc..)
! /usr/bin/sfdumper -T -i <image path and name>  -t <image type> -o <output directory>
                    --> the script works on a single image file
! /usr/bin/sfdumper -T -d <path of dir containing split image> -t <image type> -o <output directory>
                    --> the script works on a split image contained in specified path
  
  where:
