From 32ae80d5368bcf214f278965b047112e4565ea83 Mon Sep 17 00:00:00 2001
From: "Victor M. Alvarez" <vmalvarez@virustotal.com>
Date: Wed, 8 Feb 2023 20:14:33 +0100
Subject: [PATCH] Fix endianness issues in ELF module.

See #1855.
---
 libyara/modules/elf/elf.c | 88 +++++++++++++++++++--------------------
 1 file changed, 44 insertions(+), 44 deletions(-)

diff --git a/libyara/modules/elf/elf.c b/libyara/modules/elf/elf.c
index 0f4ae4c78..2a34cc8ec 100644
--- a/libyara/modules/elf/elf.c
+++ b/libyara/modules/elf/elf.c
@@ -475,20 +475,22 @@ static const char* str_table_entry(
     elf##bits##_section_header_t* section;                                                \
     elf##bits##_program_header_t* segment;                                                \
                                                                                           \
-    yr_set_integer(yr_##bo##16toh(elf->type), elf_obj, "type");                              \
-    yr_set_integer(yr_##bo##16toh(elf->machine), elf_obj, "machine");                        \
-    yr_set_integer(yr_##bo##bits##toh(elf->sh_offset), elf_obj, "sh_offset");                \
-    yr_set_integer(yr_##bo##16toh(elf->sh_entry_size), elf_obj, "sh_entry_size");            \
-    yr_set_integer(                                                                          \
+    yr_set_integer(yr_##bo##16toh(elf->type), elf_obj, "type");                           \
+    yr_set_integer(yr_##bo##16toh(elf->machine), elf_obj, "machine");                     \
+    yr_set_integer(yr_##bo##bits##toh(elf->sh_offset), elf_obj, "sh_offset");             \
+    yr_set_integer(                                                                       \
+        yr_##bo##16toh(elf->sh_entry_size), elf_obj, "sh_entry_size");                    \
+    yr_set_integer(                                                                       \
         yr_##bo##16toh(elf->sh_entry_count), elf_obj, "number_of_sections");              \
-    yr_set_integer(yr_##bo##bits##toh(elf->ph_offset), elf_obj, "ph_offset");                \
-    yr_set_integer(yr_##bo##16toh(elf->ph_entry_size), elf_obj, "ph_entry_size");            \
-    yr_set_integer(                                                                          \
+    yr_set_integer(yr_##bo##bits##toh(elf->ph_offset), elf_obj, "ph_offset");             \
+    yr_set_integer(                                                                       \
+        yr_##bo##16toh(elf->ph_entry_size), elf_obj, "ph_entry_size");                    \
+    yr_set_integer(                                                                       \
         yr_##bo##16toh(elf->ph_entry_count), elf_obj, "number_of_segments");              \
                                                                                           \
     if (yr_##bo##bits##toh(elf->entry) != 0)                                              \
     {                                                                                     \
-      yr_set_integer(                                                                        \
+      yr_set_integer(                                                                     \
           flags& SCAN_FLAGS_PROCESS_MEMORY                                                \
               ? base_address + yr_##bo##bits##toh(elf->entry)                             \
               : elf_rva_to_offset_##bits##_##bo(                                          \
@@ -521,24 +523,24 @@ static const char* str_table_entry(
                                                                                           \
       for (i = 0; i < yr_##bo##16toh(elf->sh_entry_count); i++, section++)                \
       {                                                                                   \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##32toh(section->type), elf_obj, "sections[%i].type", i);              \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(section->flags),                                           \
             elf_obj,                                                                      \
             "sections[%i].flags",                                                         \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(section->addr),                                            \
             elf_obj,                                                                      \
             "sections[%i].address",                                                       \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(section->size),                                            \
             elf_obj,                                                                      \
             "sections[%i].size",                                                          \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(section->offset),                                          \
             elf_obj,                                                                      \
             "sections[%i].offset",                                                        \
@@ -550,7 +552,7 @@ static const char* str_table_entry(
               str_table, elf_raw + elf_size, yr_##bo##32toh(section->name));              \
                                                                                           \
           if (section_name)                                                               \
-            yr_set_string(section_name, elf_obj, "sections[%i].name", i);                    \
+            yr_set_string(section_name, elf_obj, "sections[%i].name", i);                 \
         }                                                                                 \
                                                                                           \
         if (yr_##bo##32toh(section->type) == ELF_SHT_SYMTAB &&                            \
@@ -620,7 +622,7 @@ static const char* str_table_entry(
                                                                                           \
           if (sym_name)                                                                   \
           {                                                                               \
-            yr_set_string(sym_name, elf_obj, "symtab[%i].name", j);                          \
+            yr_set_string(sym_name, elf_obj, "symtab[%i].name", j);                       \
             (*symbol)->name = (char*) yr_malloc(strlen(sym_name) + 1);                    \
             if ((*symbol)->name == NULL)                                                  \
               return ERROR_INSUFFICIENT_MEMORY;                                           \
@@ -630,34 +632,33 @@ static const char* str_table_entry(
                                                                                           \
           int bind = sym->info >> 4;                                                      \
           (*symbol)->bind = bind;                                                         \
-          yr_set_integer(bind, elf_obj, "symtab[%i].bind", j);                               \
+          yr_set_integer(bind, elf_obj, "symtab[%i].bind", j);                            \
                                                                                           \
           int type = sym->info & 0xf;                                                     \
           (*symbol)->type = type;                                                         \
-          yr_set_integer(type, elf_obj, "symtab[%i].type", j);                               \
+          yr_set_integer(type, elf_obj, "symtab[%i].type", j);                            \
                                                                                           \
           int shndx = yr_##bo##16toh(sym->shndx);                                         \
           (*symbol)->shndx = shndx;                                                       \
-          yr_set_integer(shndx, elf_obj, "symtab[%i].shndx", j);                             \
+          yr_set_integer(shndx, elf_obj, "symtab[%i].shndx", j);                          \
                                                                                           \
           int value = yr_##bo##bits##toh(sym->value);                                     \
           (*symbol)->value = value;                                                       \
-          yr_set_integer(                                                                    \
+          yr_set_integer(                                                                 \
               yr_##bo##bits##toh(sym->value), elf_obj, "symtab[%i].value", j);            \
                                                                                           \
           int size = yr_##bo##bits##toh(sym->size);                                       \
           (*symbol)->size = size;                                                         \
-          yr_set_integer(                                                                    \
+          yr_set_integer(                                                                 \
               yr_##bo##bits##toh(sym->size), elf_obj, "symtab[%i].size", j);              \
                                                                                           \
-          int other = yr_##bo##bits##toh(sym->other);                                     \
-          (*symbol)->visibility = other & 0x3;                                            \
+          (*symbol)->visibility = sym->other & 0x3;                                       \
                                                                                           \
           symbol = &((*symbol)->next);                                                    \
         }                                                                                 \
                                                                                           \
         elf_data->symtab->count = j;                                                      \
-        yr_set_integer(j, elf_obj, "symtab_entries");                                        \
+        yr_set_integer(j, elf_obj, "symtab_entries");                                     \
       }                                                                                   \
                                                                                           \
       if (is_valid_ptr(                                                                   \
@@ -692,7 +693,7 @@ static const char* str_table_entry(
                                                                                           \
           if (dynsym_name)                                                                \
           {                                                                               \
-            yr_set_string(dynsym_name, elf_obj, "dynsym[%i].name", m);                       \
+            yr_set_string(dynsym_name, elf_obj, "dynsym[%i].name", m);                    \
             (*symbol)->name = (char*) yr_malloc(strlen(dynsym_name) + 1);                 \
             if ((*symbol)->name == NULL)                                                  \
               return ERROR_INSUFFICIENT_MEMORY;                                           \
@@ -702,20 +703,20 @@ static const char* str_table_entry(
                                                                                           \
           int bind = dynsym->info >> 4;                                                   \
           (*symbol)->bind = bind;                                                         \
-          yr_set_integer(dynsym->info >> 4, elf_obj, "dynsym[%i].bind", m);                  \
+          yr_set_integer(dynsym->info >> 4, elf_obj, "dynsym[%i].bind", m);               \
                                                                                           \
           int type = dynsym->info & 0xf;                                                  \
           (*symbol)->type = type;                                                         \
-          yr_set_integer(dynsym->info & 0xf, elf_obj, "dynsym[%i].type", m);                 \
+          yr_set_integer(dynsym->info & 0xf, elf_obj, "dynsym[%i].type", m);              \
                                                                                           \
           int shndx = yr_##bo##16toh(dynsym->shndx);                                      \
           (*symbol)->shndx = shndx;                                                       \
-          yr_set_integer(                                                                    \
+          yr_set_integer(                                                                 \
               yr_##bo##16toh(dynsym->shndx), elf_obj, "dynsym[%i].shndx", m);             \
                                                                                           \
           int value = yr_##bo##bits##toh(dynsym->value);                                  \
           (*symbol)->value = value;                                                       \
-          yr_set_integer(                                                                    \
+          yr_set_integer(                                                                 \
               yr_##bo##bits##toh(dynsym->value),                                          \
               elf_obj,                                                                    \
               "dynsym[%i].value",                                                         \
@@ -723,20 +724,19 @@ static const char* str_table_entry(
                                                                                           \
           int size = yr_##bo##bits##toh(dynsym->size);                                    \
           (*symbol)->size = size;                                                         \
-          yr_set_integer(                                                                    \
+          yr_set_integer(                                                                 \
               yr_##bo##bits##toh(dynsym->size),                                           \
               elf_obj,                                                                    \
               "dynsym[%i].size",                                                          \
               m);                                                                         \
                                                                                           \
-          int other = yr_##bo##bits##toh(dynsym->other);                                  \
-          (*symbol)->visibility = other & 0x3;                                            \
+          (*symbol)->visibility = dynsym->other & 0x3;                                    \
                                                                                           \
           symbol = &((*symbol)->next);                                                    \
         }                                                                                 \
                                                                                           \
         elf_data->dynsym->count = m;                                                      \
-        yr_set_integer(m, elf_obj, "dynsym_entries");                                        \
+        yr_set_integer(m, elf_obj, "dynsym_entries");                                     \
       }                                                                                   \
     }                                                                                     \
                                                                                           \
@@ -753,36 +753,36 @@ static const char* str_table_entry(
                                                                                           \
       for (i = 0; i < yr_##bo##16toh(elf->ph_entry_count); i++, segment++)                \
       {                                                                                   \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##32toh(segment->type), elf_obj, "segments[%i].type", i);              \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##32toh(segment->flags), elf_obj, "segments[%i].flags", i);            \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(segment->offset),                                          \
             elf_obj,                                                                      \
             "segments[%i].offset",                                                        \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(segment->virt_addr),                                       \
             elf_obj,                                                                      \
             "segments[%i].virtual_address",                                               \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(segment->phys_addr),                                       \
             elf_obj,                                                                      \
             "segments[%i].physical_address",                                              \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(segment->file_size),                                       \
             elf_obj,                                                                      \
             "segments[%i].file_size",                                                     \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(segment->mem_size),                                        \
             elf_obj,                                                                      \
             "segments[%i].memory_size",                                                   \
             i);                                                                           \
-        yr_set_integer(                                                                      \
+        yr_set_integer(                                                                   \
             yr_##bo##bits##toh(segment->alignment),                                       \
             elf_obj,                                                                      \
             "segments[%i].alignment",                                                     \
@@ -795,9 +795,9 @@ static const char* str_table_entry(
                                                                                           \
           for (j = 0; IS_VALID_PTR(elf, elf_size, dyn); dyn++, j++)                       \
           {                                                                               \
-            yr_set_integer(                                                                  \
+            yr_set_integer(                                                               \
                 yr_##bo##bits##toh(dyn->tag), elf_obj, "dynamic[%i].type", j);            \
-            yr_set_integer(                                                                  \
+            yr_set_integer(                                                               \
                 yr_##bo##bits##toh(dyn->val), elf_obj, "dynamic[%i].val", j);             \
                                                                                           \
             if (dyn->tag == ELF_DT_NULL)                                                  \
@@ -806,7 +806,7 @@ static const char* str_table_entry(
               break;                                                                      \
             }                                                                             \
           }                                                                               \
-          yr_set_integer(j, elf_obj, "dynamic_section_entries");                             \
+          yr_set_integer(j, elf_obj, "dynamic_section_entries");                          \
         }                                                                                 \
       }                                                                                   \
     }                                                                                     \
